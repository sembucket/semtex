/*
 * COMM-NX: Driver for NX communications and parallel I/O
 *
 * RCS Information
 * ---------------
 * $Author$
 * $Date$
 * $Revision$
 * ------------------------------------------------------------------------- */

#include <nx.h>
#include "comm/comm.h"

/* General */

int comm_init (int argc, char *argv[])
{
  size = numnodes();
  rank = mynode();
  return 0;
}

int comm_exit () { return 0; }
int comm_size () { return size; }
int comm_rank () { return rank; }

/* Message Passing and Synchronization */

int comm_sync () 
{ gsync(); return 0; }

int comm_send (int type, const void *buf, size_t size, int node)
{ csend (type, buf, size, node, 0); return 0; }

int comm_recv (int type, void *buf, size_t size)
{ crecv (type, buf, size); return 0; }

int comm_sendx (int type, const void *buf, size_t size, int node)
{ return isend (type, buf, size, node, 0); }

int comm_recvx (int type, void *buf, size_t size)
{ return irecv (type, buf, size); }

int comm_wait (int id) 
{ msgwait (id); return 0; }


/* Global reduction */

int comm_dsum (int n, double *x, double *work)
{ gdsum (x, n, work); return 0; }
