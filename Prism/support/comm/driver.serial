/*
 * COMM-SERIAL: serial machines (no communications)
 *
 * $Revision$
 *
 * Author:  R. D. Henderson
 * ------------------------------------------------------------------------- */

/* General */

int comm_init (int *argc, char **argv[]) { return 0; }
int comm_exit ()                         { return 0; }

int comm_size () { return npes; }
int comm_rank () { return rank; }

/* Message Passing and Synchronization */

int comm_sync () { return 0; }

int comm_send (int type, const void *buf, size_t size, int node)
{ return 0; }

int comm_recv (int type, void *buf, size_t size)
{ return 0; }

int comm_sendx (int type, const void *buf, size_t size, int node)
{ return comm_send (type, buf, size, node); }

int comm_recvx (int type, void *buf, size_t size)
{ return comm_recv (type, buf, size); }

int comm_wait (int commid)
{ return 0; }

/* Global reduction */

int comm_dsum (int n, const double *u, double *v) {
  memcpy (v, u, n*sizeof(double)); 	
  return 0;
}

int comm_dmax (int n, const double *u, double *v) { 
  memcpy (v, u, n*sizeof(double)); 	
  return 0;
}

int comm_isum (int n, const int *u, int *v) {
  memcpy (v, u, n*sizeof(int)); 	
  return 0;
}

int comm_imax (int n, const int *u, int *v) {
  memcpy (v, u, n*sizeof(int)); 	
  return 0;
}

	
