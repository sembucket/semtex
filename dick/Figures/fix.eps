%!PS-Adobe-2.0 EPSF-1.2
%%Creator: QuarkXPress(R) 4.1
%%Title: title (Page 1)
%%CreationDate: 24/2/04 12:24 PM
%%DocumentProcSets: QuarkXPress_EPS_4.1 1.0 0
%%DocumentSuppliedProcSets: QuarkXPress_EPS_4.1 1.0 0
%%DocumentProcessColors: Black
%%DocumentCustomColors: (PANTONE 167 CV)
%%CMYKCustomColor: 0 .6 1 .18 (PANTONE 167 CV)
%%DocumentFonts: AkzidenzGroteskBE-Bold
%%+ Trajan-Bold
%%DocumentData: Binary
%%LanguageLevel: 1 
%%BoundingBox: 0 0 425 425 
%%EndComments
userdict/xbldct 41 dict dup begin put
/setpacking where dup{exch pop currentpacking exch true setpacking}if
/@1 0 def/@2 0 def
/c0 0 def/m0 0 def/y0 0 def/k0 0 def
/c1 0 def/m1 0 def/y1 0 def/k1 0 def
/cstp 0 def/mstp 0 def/ystp 0 def/kstp 0 def
/blmode 0 def
/blf 0 def
/blstp 0 def
/blw 0 def
/minblnd 16 def
/mtx matrix def
/T true def
/F false def
/B{bind def}bind def
/X{exch def}B
/m/moveto load def
/l/lineto load def
/rl/rlineto load def
/p2{pop pop}B
/p3{pop pop pop}B
/p4{pop pop pop pop}B
/setcustomcolor where{pop/docust{save 1 index 4 get
 [.5 .5 .5 0 6 -1 roll] 1 setcustomcolor currentgray
 exch restore dup 1 eq exch 0 eq or}B}{/docust{F}B}ifelse
/setseparationgray where{pop/doregblnd T def/sepgr{setseparationgray}B}
 {/doregblnd F def/sepgr systemdict/setgray get def}ifelse
/setsepval{dup -1 eq{pop aload pop setcmykcolor}
 {setcustomcolor}ifelse currentgray}B
/setcompval{dup -1 eq{pop aload pop}
 {exch aload p2 4{4 index mul 4 1 roll}repeat 5 -1 roll pop}ifelse}B
/calcbnd{72 72 mtx defaultmatrix dtransform abs exch abs 2 copy lt{exch}if
 pop/languagelevel where{pop languagelevel}{1}ifelse 2 ge{pop 256}
 {/currentcolorscreen where{pop currentcolorscreen p2 3
 {3 index 2 copy lt{exch}if 5 1 roll p4}repeat}{currentscreen p2}ifelse
 div dup mul round cvi 15 add 16 idiv dup 1 lt{pop 1}if
 16 mul dup 256 gt{pop 256}if}ifelse minblnd 2 copy lt{exch}if pop/maxblnd X}B
/blar[
 {dup neg -128 m 0 256 rl dup add 0 rl 0 -256 rl}bind
 {dup neg dup m dup add 0 1 index rl dup 0 rl 0 exch neg rl}bind
 {dup neg dup 0 exch m 0 l dup 0 exch l 0 l}bind
 {0 0 3 -1 roll 0 360 arc}bind
 {dup mul dup add sqrt 0 0 3 -1 roll 0 360 arc}bind
]def
/xblnd{/blmode X/blf X blmode 2 eq{/k1 X/y1 X/m1 X/c1 X/k0 X/y0 X/m0 X/c0 X}{/k1 X/k0 X}ifelse
 k1 k0/@1 X/@2 X blmode 2 eq{@2 @1 sub abs c1 c0 sub abs 2 copy lt
 {exch c1 c0/@1 X/@2 X}if pop m1 m0 sub abs 2 copy lt
 {exch m1 m0/@1 X/@2 X}if pop y1 y0 sub abs lt{y1 y0/@1 X/@2 X}if}if
 @1 @2 blmode 2 eq{1 exch sub exch 1 exch sub}if 2 copy lt{exch}if
 sub/blstp exch/maxblnd where{pop}{calcbnd}ifelse maxblnd mul round cvi def
 blstp 0 ne{/blw 128 blstp 1 add div def/kstp k1 k0 sub blstp div def
 blmode 2 eq{/cstp c1 c0 sub blstp div def/mstp m1 m0 sub blstp div def
 /ystp y1 y0 sub blstp div def}if}if gsave 128 128 translate newpath
 blmode 2 eq{c0 m0 y0 k0 setcmykcolor}{k0 blmode 0 eq{setgray}{sepgr}ifelse}ifelse
 128 blar 1 get exec fill blstp 0 ne{blw 128 blar blf get blstp 1 add
 blmode 2 eq{{c0 m0 y0 k0 setcmykcolor 2 copy exec fill exch 2 index sub exch
 /c0 c0 cstp add def/m0 m0 mstp add def/y0 y0 ystp add def/k0 k0 kstp add def}repeat}
 {{k0 blmode 0 eq{setgray}{sepgr}ifelse 2 copy exec fill exch 2 index sub exch
 /k0 k0 kstp add def}repeat}ifelse p3}if grestore}B
/xcustblnd{5 1 roll dup -2 eq{doregblnd{exch dup length 1 sub get 1 exch sub exch T F}
 {pop dup length 6 eq{dup 0 5 getinterval exch 5 get}{0 4 getinterval -1}ifelse T}ifelse}{T}ifelse
 {dup -1 eq{F}{1 index docust exch pop}ifelse}if
 5 -2 roll dup -2 eq{doregblnd{exch dup length 1 sub get 1 exch sub exch T F}
 {pop dup length 6 eq{dup 0 5 getinterval exch 5 get}{0 4 getinterval -1}ifelse T}ifelse}{T}ifelse
 {dup -1 eq{F}{1 index docust exch pop}ifelse}if 6 -3 roll 4 -1 roll or
 {dup -2 eq{pop}{setsepval}ifelse 3 1 roll dup -2 eq{pop}{setsepval}ifelse exch 3 -1 roll 1 xblnd}
 {setcompval 6 -2 roll setcompval 8 -4 roll 9 -1 roll 2 xblnd}ifelse}B
{setpacking}if
end
%%BeginProcSet: QuarkXPress_EPS_4.1 1.0 0
/QuarkXPress_EPS_4.1 userdict exch 400 dict dup begin put
/vmreclaim where{begin -2 vmreclaim end}if
/setpacking where/pkng exch def
pkng{pop/savepacking currentpacking def true setpacking}if
/T true def
/F false def
/B{bind def}bind def
/X{exch def}B
/m/moveto load def
/rm/rmoveto load def
/l/lineto load def
/rl/rlineto load def
/O/curveto load def
/np/newpath load def
/cp/closepath load def
/z/setmatrix load def
/t/translate load def
/S/scale load def
/g/gsave load def
/G/grestore load def
/H/setgray load def
/R/setrgbcolor load def
/v/fill load def
/V/eofill load def
/u/clip load def
/U/eoclip load def
/n/stroke load def
/o/setlinewidth load def
/a/setlinecap load def
/b/setlinejoin load def
/p/setdash load def
/M/show load def
/N/ashow load def
/Q/awidthshow load def
/Y/widthshow load def
/vrbar[/u load/U load/v load/V load/n load]def
/cps{{currentpoint}stopped}B
/epS{/us save def countdictstack us mark}B
/epR{{cleartomark dup us eq{pop exit}if}loop countdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse us restore}B
/mif{{}{m}ifelse}B
/mrl{g np m rl n G}B
/L{g np m l n G}B
/qA .166667 def
/qB .833333 def
/qC .5 def
/pmx matrix def
/imx matrix def
/mtx matrix def
/mtx1 matrix def
/mx0 matrix def
/mx1 matrix def
/mx2 matrix def
/mx3 matrix def
/2t 2 array def
/2a[0 0]def
/6a 6 array def
/a50 50 array def
/p2{pop pop}B
/p3{pop pop pop}B
/p4{pop pop pop pop}B
/R0{mx1 astore concat}B
/R1{mx0 currentmatrix pop R0}B
/R2{mx3 currentmatrix pop R0}B
/epnul{
 29{0}repeat
 /a X/b X/C X/g X/G X/H X/l X/m X/M X/n X/N X/o X/O X
 /p X/Q X/R X/S X/t X/u X/U X/v X/V X/w X/Y X/z X
 /cp X/np X/rl X/rm X}B
/findfont[/findfont load{stopped{pop/Courier findfont}if}aload pop]cvx B
/sp0{{abs exch abs 2 copy add 1 gt{1. sub dup mul exch 1. sub dup mul add 1. sub}
 {dup mul exch dup mul add 1. exch sub}ifelse}}B
/sp1{{exch pop abs 1. exch sub}}B
/sp2{{dup mul exch dup mul .4 mul add 1. exch sub}}B
/sp3{{abs exch abs 2 copy gt{exch}if pop}}B
/sp4{{1. add 4. mul cvi 8 mul exch 1. add 4. mul cvi add
 (\177_wW}]uUOoGgMmEesS{[qQyYCcKkAaIi|\\tT~^vVLlDdNnFfpPxXrRzZ@`HhBbJj)
 exch get 128 div}}B
/sp8{exch 3. div exch{2{1. add 1.5 mul dup floor sub 2. mul 1. sub exch}repeat
 abs exch abs 2 copy add 1 gt{1. sub dup mul exch 1. sub dup mul add 1. sub}
 {dup mul exch dup mul add 1. exch sub}ifelse}}B
/strtp{/ctp X setclp}B
/endp{/ctp {} def setclp}B
/kp{ct1 0 2 index length 2 index 99 2 index put getinterval copy cvx exec
 mtx1 currentmatrix pop cps np mif}B
/ptc{cmykprsnt 1 clrspusd eq and{currentcmykcolor 4}{currentrgbcolor 3}ifelse
 -1 1{exch 255 mul cvi bkc 3 1 roll put}for}B
/gtc{1 1 cmykprsnt 1 clrspusd eq and{4}{3}ifelse{bkc exch get 255. div}for
 cmykprsnt 1 clrspusd eq and{setcmykcolor}{R}ifelse}B
/crntc{regsh 0 lt custprsnt not and
 {cmykprsnt{currentcmykcolor}{currentgray}ifelse}if
 custar aload pop pop custsh custprsnt regsh
 }def
/crntcrgb{regsh 0 lt custprsnt not and
 {currentrgbcolor}if
 custarrgb aload pop pop custsh custprsnt regsh
 }def
/setc{/regsh X/custprsnt X/custsh X custnamstr 0 1 index 79 get getinterval custar astore pop
 regsh 0 ge{regsh setseparationgray}{custprsnt{custar custsh setcustomcolor}
 {cmykprsnt{setcmykcolor}{H}ifelse}ifelse}ifelse
 }def
/setcrgb{/regsh X/custprsnt X/custsh X custnamstr 0 1 index 79 get getinterval custarrgb astore pop
 regsh 0 ge{regsh setseparationgray}{custprsnt{custarrgb custsh setcustomcolorrgb}
 {setrgbcolor}ifelse}ifelse
 }def
/shp{dup 1 gt/@1 X vrbar exch get currentflat{@1{g}if{1 index exec}stopped @1{G}if
 {currentflat cvi 1 bitshift dup 200 gt{pop exit}{setflat}ifelse}{@1{np}if exit}ifelse}loop
 setflat pop}B
/h{currentpoint exch pop m}B
/crs{g o np m l n np m l n G}B
/mv where{pop}{/mv 256 array def
mv 0/Helvetica findfont/Encoding get 0 128 getinterval putinterval
39/quotesingle 96/grave
2{mv 3 1 roll put}repeat
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
mv 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave
/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex
/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve
/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger
/degree/cent/sterling/section/bullet/paragraph/germandbls/registered
/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus
/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral
/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot
/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/space
/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright
/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency
/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase
/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave
/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute
/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring
/cedilla/hungarumlaut/ogonek/caron
mv 128 128 getinterval astore pop}ifelse
/xpv mv def
/strpn{s75 cvs(|______)anchorsearch}B
statusdict begin version cvr 47.0 ge end
{/w /stringwidth load def}
{/w{g np 0 0 0 0 m l cp u stringwidth G}B}ifelse
/smc{m dup M}B
/sos{s75 cvs dup 1 79 put cvn}B
/sss{s75 cvs dup 2 83 put cvn}B
/sbs{s75 cvs dup 3 66 put cvn}B
/sts{tpamt 0 ne{str cvs dup 4 84 put length dup tpamt s75 cvs dup length
 str 4 -2 roll putinterval add str 0 3 -1 roll getinterval cvn}if}B
/Z{/psy X/psx X curf
 psx 0 psx usangl{.212557 mul}{pop 0}ifelse psy neg 0 0 fmtx astore makefont setfont}B
/f{/psy X/psx X far exch get aload pop dup 1 and 0 ne/usangl X 2 and 0 ne/doss X dup/curf X
 psx 0 psx usangl{.212557 mul}{pop 0}ifelse psy neg 0 0 fmtx astore makefont setfont}B
/cf{{1 index/FID ne 2 index/UniqueID ne and{def}{p2}ifelse}forall}B
/stlf{FontDirectory 2 index known{exch findfont}{3 -1 roll newmm}ifelse
 3 1 roll p2}B
/vtadj{dup/vtd X{90}{-90}ifelse rotate}B
/nwf{count 1 roll dup maxlength dict begin cf FontType 0 ne{nmv{Encoding dup
 length array copy/Encoding X counttomark 2 idiv{Encoding 3 1 roll put}repeat}
 {Encoding 65 26 getinterval 0 xpv 65 26 getinterval{3 copy pop get ne{exit}if
 1 add}forall exch pop 26 eq{/Encoding xpv def}if}ifelse}if currentdict end
 count -1 roll exch definefont pop}B
/dfnt{
 /doall X/tpamt X/fnam X dup/pln X{/plnfnam X}if dup/bit X{cvn/bitfnam X}if
 dup 2 and 0 ne/bf1 X 4 and 0 ne/usangl X/nmv X
 FontDirectory fnam known not{fnam strpn{pop cvn doall{dup FontDirectory exch known}{T}ifelse
 {findfont fnam nwf F}{pop T}ifelse}{pop doall}ifelse
 {bit{FontDirectory bitfnam known{T}{bitfnam strpn{pop cvn dup FontDirectory exch known
 {findfont bitfnam nwf T}{pop F}ifelse}{pop F}ifelse}ifelse}{F}ifelse
 {/fnam bitfnam def}{pln{FontDirectory plnfnam known{/fnam plnfnam def F}
 {plnfnam strpn{pop cvn dup FontDirectory exch known{findfont plnfnam nwf/fnam plnfnam def F}
 {pop T}ifelse}{pop T}ifelse}ifelse}{T}ifelse{fnam strpn{pop cvn findfont fnam nwf}
 {pop}ifelse}if}ifelse}if}if
 nmv{cleartomark}if/sa X fnam findfont dup/fnt X/MFontType known
 not dup/nbm X{fnt/FontType get 0 eq{F}{fnt/PaintType 2 copy known
 {get 0 ne}{pop pop T}ifelse}ifelse}{T/usangl X T/bf1 X T}ifelse{/tpamt 0 def}if
 usangl sa 2 and 0 ne and/usangl X F/doss X
 sa 16 and 0 ne{fnt fnam sss sts 0 stlf}{sa 8 and 0 ne{fnt fnam sos sts 1 stlf}
 {sa 1 and 0 ne bf1 and{fnt fnam sbs sts 2 stlf}{tpamt 0 ne{fnt fnam sts 3 stlf}
 {nbm fnt/FontType get 0 ne and/doss X fnt}ifelse}ifelse}ifelse}ifelse
 [exch 0 usangl{1 add}if doss{2 add}if] far 3 1 roll put
}B
/t0{g s1 w 1 index 0 ne{3 1 roll add exch}{3 -1 roll pop}ifelse
 z4 z7 0 eq or z5 and nochdev not and{z7 0 eq nochp not and
 {mtx currentmatrix nulldevice z np 0 0 m s1 T charpath{flattenpath}stopped{F}
 {pathbbox 4 copy 3 -1 roll ne 3 1 roll ne and{T}{p4 F}ifelse}ifelse}{F}ifelse
 {T}{z4{z0 z1 z2 z3 T}{F}ifelse}ifelse}{F}ifelse G{10 -4 roll 4
 {5 -1 roll add 4 1 roll}repeat setcachedevice}{setcharwidth p4}ifelse}B
/t1{g np 0 0 m o F charpath n G}B
/newmm{dup/FontType get 0 eq
 {dup maxlength dict begin cf currentdict end dup/FDepVector 2 copy get
 [exch 6 index exch 6 index exch{newmm 3 1 roll}forall p2]put dup}
 {18 dict begin/FontMatrix[1 0 0 1 0 0]def/FontType 3 def
 /Encoding xpv def/FontBBox[0 0 1 1]def/df 1 index def/df1 0 def
 1 index 0 ge{/StyleCode 2 index def/TrapWidth tpamt def}if
 df/FontMatrix get 6a copy mark df/FontBBox get aload pop counttomark 4 eq
 {5 -1 roll pop 4 index dtransform/z3 X/z2 X 3 -1 roll dtransform/z1 X/z0 X T}
 {cleartomark pop F}ifelse/z4 X
 1 index 0 ge{df/FontType get 3 ne}{F}ifelse/z5 X df/MFontType known not dup/z6 X
 {df/PaintType 2 copy known{get 0 eq{0}{1}ifelse}{pop pop 1}ifelse}{1}ifelse/z7 X
 /df1/q 6 dict begin/FontMatrix[1 0 0 1 0 0]def/FontType 3 def
 /Encoding xpv def/FontBBox[0 0 1 1]def
 z7 0 eq{/BuildChar{pop begin xpwd begin df setfont
 d1 neg d1 neg d1 d1 0 t0 s1 d1 t1 end end}def}
 {/BuildChar{pop begin xpwd begin df setfont 0 0 d0 d0 0 t0
 s1 0 0 smc d0 0 smc d0 d0 smc 0 d0 m M end end}def}ifelse
 currentdict end definefont def
 /BuildChar{exch begin xpwd begin dup s1 0 3 -1 roll put z6 ss and
 {df/Encoding 2 copy known{get exch get dup/.notdef ne{df/CharStrings 2 copy known
 {get exch known not}{p3 T}ifelse}{pop T}ifelse}{p3 T}ifelse}{pop F}ifelse dup
 {symf begin xpwd begin}if bcar StyleCode 2 mul z7 add get exec{end end}if end end}def
 currentdict end}ifelse 3 index exch definefont exch pop}B
/c{currentrgbcolor dup 4 1 roll eq 3 1 roll eq and{bkc 0 get 0 eq
 {1 currentgray sub H}{gtc}ifelse}{1 H}ifelse}B
/bcar[
 {df setfont .05/d0 X
 TrapWidth .24 add psx div .012 2 copy lt{exch}if pop/d1 X 
 g s1 w G 1 index 0 ne{exch d0 add exch}if setcharwidth
 s1 g d0 .01 add d0 vtd not{neg}if t 0 0 smc g df1 setfont 0 0 smc G G
 g c 0 0 smc G df1 setfont 0 0 m M}

 {df setfont 1 psx div dup/d0 X 2. div dup/d3 X .05 add/d2 X
 g s1 w G 1 index 0 ne{exch d2 add exch}if setcharwidth
 s1 g d2 .01 add d2 vtd not{neg}if t 0 0 smc G
 g df1 setfont 0 0 smc G c d3 d3 m M}

 {df setfont TrapWidth .24 add psx div .012 2 copy lt{exch}if pop/d1 X
 g s1 w G setcharwidth g c s1 0 0 smc G df1 setfont 0 0 m M}

 {df setfont 1 psx div/d0 X
 g s1 w G 1 index 0 ne{exch d0 add exch}if setcharwidth
 g df1 setfont s1 0 0 smc G c d0 2. div dup m M}

 {df setfont .03/d0 X TrapWidth dup 0 lt
 {neg psx div 0 2 copy lt{exch}if pop neg}
 {psx div 0 2 copy lt{exch}if pop}ifelse .03 add/d1 X
 g s1 w G 1 index 0 ne{exch d0 add exch}if setcharwidth
 s1 d0 2 div dup m M d1 0 ne{d1 0 lt{d1 neg/d1 X gtc}if
 df1 setfont s1 d0 2 div dup m M}if}

 {df setfont .03/d0 X 0 0 d0 d0 d0 t0 
 s1 0 0 smc d0 0 smc d0 d0 smc 0 d0 m M}

 {df setfont
 TrapWidth dup 0 lt{neg}if psx div 0 2 copy lt{exch}if pop/d1 X
 TrapWidth 0 lt{g s1 w G setcharwidth s1 0 0 smc gtc df1 setfont}
 {d1 neg d1 neg d1 d1 0 t0 s1 dup d1 t1}ifelse 0 0 m M}

 {df setfont g s1 w G setcharwidth s1 0 0 m M}
] def
/shgr{chc 0 get 1 eq{100 45{dup mul exch dup mul add 1. exch sub}setscreen
 .8}{1}ifelse H}def
/setchc{chc exch 0 exch put}B
/chkch{currentfont dup/Encoding 2 copy known{get 2 index 0 get get dup/.notdef ne
 {exch/CharStrings 2 copy known{get exch known not}{p3 T}ifelse}
 {p2 T}ifelse}{p3 T}ifelse}B
/xpsh{doss ss and{sym fmtx makefont/xpfs X
 {s1 0 3 -1 roll put
 s1 chkch{g xpfs setfont M cps G mif}
 {M}ifelse}forall}{M}ifelse}B
/xpash{doss ss and{sym fmtx makefont/xpfs X
 {s1 0 3 -1 roll put 2 copy
 s1 chkch{g xpfs setfont N cps G mif}
 {N}ifelse}forall p2}{N}ifelse}B
/xpwsh{doss ss and{sym fmtx makefont/xpfs X
 {s1 0 3 -1 roll put 3 copy
 s1 chkch{g xpfs setfont Y cps G mif}
 {Y}ifelse}forall p3}{Y}ifelse}B
/xpawsh{doss ss and{sym fmtx makefont/xpfs X
 {s1 0 3 -1 roll put 5 copy
 s1 chkch{g xpfs setfont Q cps G mif}
 {Q}ifelse}forall p2 p3}{Q}ifelse}B
/d{dup doss ss and{sym fmtx makefont/xpfs X
 0 0 3 -1 roll{s1 0 3 -1 roll put
 s1 chkch{g xpfs setfont w G}
 {w}ifelse 3 -1 roll add 3 1 roll add exch}forall}
 {w}ifelse pop 3 -1 roll sub 3 -1 roll div
 3 -1 roll exch sub 0 32 3 -1 roll 0 5 -1 roll
 doss ss and{xpash p3}{Q}ifelse}B
/D{dup doss ss and{sym fmtx makefont/xpfs X
 0 0 3 -1 roll{s1 0 3 -1 roll put
 s1 chkch{g xpfs setfont w G}
 {w}ifelse 3 -1 roll add 3 1 roll add exch}forall}
 {w}ifelse pop 3 -1 roll exch sub 3 -1 roll div 0 3 -1 roll xpash}B
/ssh{2 copy g dup vtd{neg}if rm shgr xpsh pop G xpsh}B
/std{6 copy g dup vtd{neg}if rm shgr d pop G d}B
/mc{0 3 1 roll transform neg exch pop}B
/sgt{2 copy known{get T}{p2 F}ifelse}B
/kif{currentfont dup/FontMatrix get exch/FontInfo sgt{T}{currentfont/df sgt
  {dup/FontInfo sgt{3 1 roll/FontMatrix get mtx concatmatrix exch T}{p3 F}
  ifelse}{p2 F}ifelse}ifelse{3 -1 roll sgt{exch T}{pop F}ifelse}{F}ifelse}B
/ul{g/@1 X{90 rotate 1 -1 S}if/@2 X/@3 X/@4 X @3 0 lt{
 @1{/UnderlinePosition kif{mc neg ulpmax 0 ne{dup @3 div abs ulpmax gt
 {pop T}{F}ifelse}{F}ifelse}{T}ifelse}{T}ifelse{@3 -10 div}if
 @2 1 and 0 ne{@4 div}if
 @1{/UnderlineThickness kif{mc ultmax 0 ne{dup @3 div abs ultmax gt
 {pop T}{F}ifelse}{F}ifelse}{T}ifelse}{T}ifelse{@3 -15 div}if
 @2 1 and 0 ne{@4 div}if}{@3}ifelse abs
 @1{currentfont/TrapWidth sgt}{F}ifelse not{0}if
 dup dup 2. div dup dup 0 lt{pop 0}if/@1 X
 neg 5 -1 roll rm 3 -1 roll add dup 0 lt{pop 0}if o
 add dup 0 lt{pop 0}if currentpoint np m
 @2 16 and 0 ne{g @2 8 and 0 eq{shgr}if currentlinewidth 2. div dup
 rm dup 0 rl n G}if @2 8 and 0 ne dup
 {g gtc 1 index 0 rl n G}if
 {@1 sub @1 2. div 0 rm currentlinewidth @1 sub o
 currentpoint np currentlinewidth 2. div sub m dup 0 rl
 0 currentlinewidth @2 512 and 0 eq{rl}{rm}ifelse
 neg 0 rl @2 256 and 0 eq{0 currentlinewidth neg rl}if
 xpys @1 add o 2 a}{0 rl}ifelse n G}B
/strik{g []0 p o np m rl n G}B
/rv{/@2 X/@3 X/@4 X/@5 X/@6 X/@7 X cps np
  @6 @7 @3 90 @2 sub @2 arcn @4 @7 @3 180 @2 sub 90 @2 add arcn
  @4 @5 @3 270 @2 sub 180 @2 add arcn @6 @5 @3 360 @2 sub 270 @2 add arcn
  cp mif}B
/rs{/@2 X/@4 X/@5 X/@6 X/@7 X cps np
  @6 @2 add @7 m @4 @2 sub @7 l @4 @7 @2 add l @4 @5 @2 sub l
  @4 @2 sub @5 l @6 @2 add @5 l @6 @5 @2 sub l @6 @7 @2 add l
  cp mif}B
/dop{dup 6 le{vrb exch get exec}{pop}ifelse}B
/vrb[{fp{fg 0 get 0 ne{g n G}
 {g 1 o pnsh pnsv S n G}ifelse}if np}bind
 /eofill load dup/newpath load 1 index dup{u np}bind]def
/fp{pnsh 0 ne pnsv 0 ne and}B
/pen{pnm mul/pnsh X pnm mul/pnsv X pnsh o}B
/lin{fg 0 get 0 ne{l currentpoint 0 dop m}
 {currentpoint/@3 X/@4 X g np/@1 X/@2 X 
 fp{@4 @2 lt{@3 @1 ge{@4 @3 m @2 @1 l pnsh 0 rl
 0 pnsv rl @4 pnsh add @3 pnsv add l pnsh neg 0 rl}
 {@4 @3 m pnsh 0 rl @2 pnsh add @1 l 0 pnsv rl
 pnsh neg 0 rl @4 @3 pnsv add l}ifelse}{@3 @1 gt
 {@2 @1 m pnsh 0 rl @4 pnsh add @3 l 0 pnsv rl
 pnsh neg 0 rl @2 @1 pnsv add l}{@4 @3 m pnsh 0 rl
 0 pnsv rl @2 pnsh add @1 pnsv add l pnsh neg 0 rl
 0 pnsv neg rl}ifelse}ifelse cp v}if @2 @1 G m}ifelse}B
/rc{dup/@flag X{/@t X g}if cps dup{5 1}{7 3}ifelse roll np
 4 copy 4 2 roll exch m 6 -1 roll l l l cp @flag{@t dop G}if mif}B
/cmnrr{cps np
 @4 @6 add 2. div @7 m
 @4 @7 @4 @5 @2 arcto p4
 @4 @5 @6 @5 @2 arcto p4
 @6 @5 @6 @7 @2 arcto p4
 @6 @7 @4 @7 @2 arcto p4
 cp mif}B
/rr{/@1 X 2. div/@2 X pop/@4 X/@5 X/@6 X/@7 X
 @7 @5 eq @6 @4 eq or @2 pnsh 2 div le or @2 pnsv 2 div le or
 {@7 @6 @5 @4 @1 T rc}{@4 @6 sub abs 2. div dup @2 lt{/@2 X}{pop}ifelse
 @5 @7 sub abs 2. div dup @2 lt{/@2 X}{pop}ifelse
 @1 0 eq{@2 pnsh 2 div 2 copy gt{sub/@2 X}{p2}ifelse}if
 g cmnrr @1 dop G}ifelse}B
/rr1{/@2 X/@4 X/@5 X/@6 X/@7 X cmnrr}B
/qa{3 -1 roll add exch 3 -1 roll add exch}B
/qm{3 -1 roll 1 index mul 3 1 roll mul}B
/qs{3 -1 roll sub exch 3 -1 roll sub exch}B
/qp{6 copy 12 -2 roll p2}B
/qn{6a exch get mul}B
/qx{6a astore pop
 qA 0 qn qB 2 qn add   qA 1 qn qB 3 qn add
 qB 2 qn qA 4 qn add   qB 3 qn qA 5 qn add
 qC 2 qn qC 4 qn add   qC 3 qn qC 5 qn add}B
/bp{currentpoint np 2 copy m}B
/qi{{4 copy 2 copy 10 2 roll qa .5 qm np m}{2 copy 6 -2 roll 2 qm qs 4 2 roll}ifelse}B
/qc{qp qx O}B
/qq{{qc 6 -2 roll qx O}{4 copy qs qa qx O}ifelse}B
/ep{dup 0 eq{{m}{lin}{}{}pathforall pop}{dop}ifelse G currentpoint np m}B
/ef{ff{g V G}if}B
/ec{1 and 0 ne{0 dop}if G currentpoint np m}B
/eu{currentpoint fp{0 ep}{G np}ifelse m}B
/pt{currentpoint np m}B
/barc{/@flag X/@1 X/@3 X/@4 X @flag{/@2 X}if/@5 X
 /@6 X/@7 X/@8 X @flag{g}if cps mtx currentmatrix
 @5 @7 add 2 div @6 @8 add 2 div t np 0 0 m
 @5 @7 sub @6 @8 sub S @1{np}if
 0 0 .5 @4 @3 arc @4 @3 sub abs 360 ge{cp}if
 z mif @flag{@2 dop G}if}B
/ar{3 1 roll 2 index 0 eq T barc}B
/ov{0 360 T 4 -1 roll barc}B
/tc{32768 div add 3 1 roll 32768 div add 2t astore pop}B
/tp{2a astore pop}B
/tt{mx2 currentmatrix pop currentpoint 2 copy 
 2t aload pop qa 2 copy t 2a aload pop exch dup 0 eq
 {pop}{1 eq{-1 1}{1 -1}ifelse S}ifelse 
 rotate neg exch neg exch t m}B
/te{mx2 z}B
/px{tp tt}B
/dh{fg 0 1 put array astore dup{1 xpxs div mul exch}forall
 astore exch pop exch pop exch p}B
/rh{fg 0 0 put ih aload pop p}B
/sd{a50 0 3 -1 roll getinterval astore exch p}B
/lw{div/pnm X pnsv pnsh pen}B
/gr{64. div H}B
/sg{rstrscr gr}B
/pat{savscr sa8 copy pop patfr 0
 [{1 add 4 mul cvi}aload pop sa8
 {exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}aload pop]cvx setscreen gr}def
/cpat{savscr 7 -1 roll sa8 copy pop patfr 0
 [{1 add 4 mul cvi}aload pop sa8
 {exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}aload pop]cvx
 8 -1 roll sb8 copy pop patfr 0
 [{1 add 4 mul cvi}aload pop sb8
 {exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}aload pop]cvx
 9 -1 roll sc8 copy pop patfr 0
 [{1 add 4 mul cvi}aload pop sc8
 {exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}aload pop]cvx
 10 -1 roll sd8 copy pop patfr 0
 [{1 add 4 mul cvi}aload pop sd8
 {exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}aload pop]cvx
 setcolorscreen setcmykcolor}def
/savscr{ns not{/ns T def cmykprsnt
 {currentcolorscreen currentcolortransfer count 16 roll}
 {currentscreen ctf count 4 roll}ifelse st0}if}def
/rstrscr{ns{cmykprsnt{count -16 roll systemdict/setcolortransfer known
 {cstf}{stf p3}ifelse setcolorscreen}
 {count -4 roll stf setscreen}ifelse/ns F def}if}def
/setclp{np 0 0 m
 ct1 99 get 0 ne{ct1 0 ct1 99 get getinterval cvx exec}if
 ctp cps np mif}B
/spcldr{dup doss ss and{sym fmtx makefont/xpfs X
 0 0 3 -1 roll{s1 0 3 -1 roll put
 s1 chkch{g xpfs setfont w G}
 {w}ifelse 3 -1 roll add 3 1 roll add exch}forall}
 {w}ifelse pop 3 -1 roll exch sub 3 -1 roll
 /numz 5 -1 roll def numz 10 mul add div numz 0 eq
 {0 0}{dup 10 mul 0}ifelse 32 4 -1 roll 0 6 -1 roll
 doss ss and{xpash p3}{Q}ifelse}B
/eto {0 1 2 index length 1 sub{2 copy 1 getinterval exch pop currentpoint
 3 -1 roll M m exch 0 rm}for pop}B
/calcbnd{72 72 mtx defaultmatrix dtransform abs exch abs 2 copy lt{exch}if
 /devpxwd 72 3 -1 roll div def/languagelevel where{pop languagelevel}
 {1}ifelse 2 ge{pop 256}{/currentcolorscreen where
 {pop currentcolorscreen p2 3{3 index 2 copy lt{exch}if 5 1 roll p4}repeat}
 {currentscreen p2}ifelse div dup mul round cvi 15 add 16 idiv dup 1 lt{pop 1}if
 16 mul dup 256 gt{pop 256}if}ifelse minblnd 2 copy lt{exch}if pop/maxblnd X}B
/setsepval{dup -1 eq{pop aload pop setcmykcolor}
 {setcustomcolor}ifelse currentgray}B
/setsepvalrgb{dup -1 eq{pop aload pop setrgbcolor}
 {setcustomcolorrgb}ifelse currentgray}B
/setcompval{dup -1 eq{pop aload pop}
 {exch aload p2 4{4 index mul 4 1 roll}repeat 5 -1 roll pop}ifelse}B
/setcompvalrgb{dup -1 eq{pop aload pop}
 {exch aload p2 3{3 index mul 3 1 roll}repeat 4 -1 roll pop}ifelse}B
/blnd{dup/blmode X 2 eq{/k1 X/y1 X/m1 X/c1 X/k0 X/y0 X/m0 X/c0 X}{/k1 X/k0 X}ifelse
 k1 k0/@1 X/@2 X blmode 2 eq{@2 @1 sub abs c1 c0 sub abs 2 copy lt
 {exch c1 c0/@1 X/@2 X}if pop m1 m0 sub abs 2 copy lt
 {exch m1 m0/@1 X/@2 X}if pop y1 y0 sub abs lt{y1 y0/@1 X/@2 X}if}if
 @1 @2 blmode 2 eq{1 exch sub exch 1 exch sub}if 2 copy lt{exch}if
 sub maxblnd mul round cvi dup dup/blstp X 0 eq{pop 1}if
 /blw 256 blstp 1 add div def/kstp k1 k0 sub 2 index div def
 blmode 2 eq{/cstp c1 c0 sub 2 index div def/mstp m1 m0 sub 2 index div def
 /ystp y1 y0 sub 2 index div def}if pop g np[]0 p 0 a
 blw dup dup devpxwd dup add add o 2 div blstp 1 add
 blmode 2 eq{{c0 m0 y0 k0 setcmykcolor dup 0 m 0 256 rl n 1 index add
 /c0 c0 cstp add def/m0 m0 mstp add def/y0 y0 ystp add def/k0 k0 kstp add def}repeat}
 {{k0 blmode 0 eq{H}{sepgr}ifelse dup 0 m 0 256 rl n 1 index add/k0 k0 kstp add def}repeat
 }ifelse p2 G}B
/blndrgb{dup/blmode X 2 eq{/b1 X/g1 X/r1 X/b0 X/g0 X/r0 X}{/b1 X/b0 X}ifelse
 b1 b0/@1 X/@2 X blmode 2 eq{@2 @1 sub abs r1 r0 sub abs 2 copy lt
 {exch r1 r0/@1 X/@2 X}if pop g1 g0 sub abs lt
 {g1 g0/@1 X/@2 X}if}if
 @1 @2 blmode 2 eq{1 exch sub exch 1 exch sub}if 2 copy lt{exch}if
 sub maxblnd mul round cvi dup dup/blstp X 0 eq{pop 1}if
 /blw 256 blstp 1 add div def/bstp b1 b0 sub 2 index div def
 blmode 2 eq{/rstp r1 r0 sub 2 index div def/gstp g1 g0 sub 2 index div def}if
 pop g np[]0 p 0 a
 blw dup dup devpxwd dup add add o 2 div blstp 1 add
 blmode 2 eq{{r0 g0 b0 setrgbcolor dup 0 m 0 256 rl n 1 index add
 /r0 r0 rstp add def/g0 g0 gstp add def/b0 b0 bstp add def}repeat}
 {{b0 blmode 0 eq{H}{sepgr}ifelse dup 0 m 0 256 rl n 1 index add/b0 b0 bstp add def}repeat
 }ifelse p2 G}B
/custblnd{dup -2 eq{doregblnd{exch dup length 1 sub get 1 exch sub exch T F}
 {pop dup length 6 eq{dup 0 5 getinterval exch 5 get}{0 4 getinterval -1}ifelse T}ifelse}{T}ifelse
 {dup -1 eq{F}{1 index docust exch pop}ifelse}if
 5 -2 roll dup -2 eq{doregblnd{exch dup length 1 sub get 1 exch sub exch T F}
 {pop dup length 6 eq{dup 0 5 getinterval exch 5 get}{0 4 getinterval -1}ifelse T}ifelse}{T}ifelse
 {dup -1 eq{F}{1 index docust exch pop}ifelse}if 6 -3 roll 4 -1 roll or
 {dup -2 eq{pop}{setsepval}ifelse 3 1 roll dup -2 eq{pop}{setsepval}ifelse exch 1 blnd}
 {setcompval 6 -2 roll setcompval 8 -4 roll 2 blnd}ifelse}B
/custblndrgb{dup -2 eq{pop dup length 5 eq{dup 0 4 getinterval exch 4 get}{0 3 getinterval -1}ifelse T}{T}ifelse
 {dup -1 eq{F}{1 index F exch pop}ifelse}if
 5 -2 roll dup -2 eq{pop dup length 5 eq{dup 0 4 getinterval exch 4 get}{0 3 getinterval -1}ifelse T}{T}ifelse
 {dup -1 eq{F}{1 index F exch pop}ifelse}if 6 -3 roll 4 -1 roll or
 {dup -2 eq{pop}{setsepvalrgb}ifelse 3 1 roll dup -2 eq{pop}{setsepvalrgb}ifelse exch 1 blndrgb}
 {setcompvalrgb 5 -2 roll setcompvalrgb 6 -3 roll 2 blndrgb}ifelse}B
/cctp{cvlit/f2 X cvlit/f1 X
 /f12 f1 length f2 length add array def
 f12 0 f1 putinterval f12 f1 length f2 putinterval f12 cvx}def
/st0{/CT load stf}B
/st1{/CT load cctp stf}B
/stcp{ctf cctp stf}B
/upl{dup length exch 0 0{3 copy exch pop get dup 64 lt
 {32 sub 4 copy exch pop put pop 1}{63 sub exch 1 add exch
 4 copy 3 -1 roll pop getinterval 5 copy 3 1 roll pop pop
 putinterval pop}ifelse dup 4 -1 roll add 3 1 roll add
 dup 4 index ge{exit}if}loop 4 -1 roll pop pop 0 exch getinterval}B
/bmp{save 16 1 roll{0 H}if/@1 X 4 index div add 3 1 roll
  5 index div add t div 3 1 roll div S @1 1 and 1 eq @1 2 and 2
  eq{g dup{0}{1}ifelse H .5 .5 idtransform abs exch abs 2 copy
  neg 1 add exch neg 1 add exch F rc V G}if
  {currentgray 1. exch sub H}if exch
  {string/S0 X pop/sf findfont setfont exch 1 exch div 1 index 1 exch div
  S 0 1 3 -1 roll 1 sub{{currentfile S0 readline pop currentfile str readline pop
  cvi dup abs 1 sub 3 index m exch M 0 lt{exit}if}loop pop}for}
  {3 index 0 0 5 index 0 0 mtx astore exch 1 rdstr imagemask}
  ifelse restore}B
pkng{savepacking setpacking}if
end
%%EndProcSet
%%EndProlog
%%BeginSetup
QuarkXPress_EPS_4.1 begin
pkng{/savepacking currentpacking def true setpacking}if
/nf F def .24 /xpys X
1 /patfr 1 1 mtx defaultmatrix dtransform pop abs dup 72 mul 4 -1 roll div exch .5 add cvi 8 mul dup 8 lt{pop 8}if div def
/psx 12. def
/psy 12. def
/sa 0 def
/ss F def
/curf 0 def
/xpfs 0 def
/doss F def
/pnm 1 def
/minblnd 16 def
/ulpmax .2 def
/ultmax .2 def
/custar 5 array def
/custarrgb 4 array def
/custsh 0 def
/regsh -1 def
/xpxs 1 def
/ovp F def
/trp 0 def
/ns F def
/nochp F def
/nochdev F def
/ff F def
/vtd F def
/custprsnt F def
/ih[currentdash]def
/xpwd 5 dict def
/fmtx matrix def
/far 512 array def
/sa8 8 string def
/sb8 8 string def
/sc8 8 string def
/sd8 8 string def
/chc (\1) def
/s1 ( ) def
/s75 75 string def
/str 256 string def
/ct0 (\0\0) def
/ct1 100 string def ct1 99 0 put
/ctp {} def
/bkc(\0abcd)def
/fg (\0) def
/custnamstr 80 string def
/xpdctopn[currentdict/begin load]cvx B
/clrspusd 1 def
/rdstr{{[{currentfile}aload pop 2 index string{readstring pop}aload pop]cvx exch}repeat pop}B
/setcustomcolor where{pop/docust{save 1 index 4 get
 [.5 .5 .5 0 6 -1 roll] 1 setcustomcolor currentgray
 exch restore dup 1 eq exch 0 eq or}B}{/docust{F}B/setcustomcolor
 {exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}B}ifelse
/setcustomcolorrgb{exch aload pop pop 3{1. exch sub 3 index mul 1. exch sub 3 1 roll}repeat setrgbcolor pop}B
/setcustc{/custprsnt T def/regsh -1 def/custsh X dup length custnamstr dup 79
 3 index put 0 3 -1 roll getinterval copy custar astore custsh setcustomcolor}B
/setcustcrgb{/custprsnt T def/regsh -1 def/custsh X dup length custnamstr dup 79
 3 index put 0 3 -1 roll getinterval copy custarrgb astore custsh setcustomcolorrgb}B
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore readonly}B}ifelse
/setoverprint where{pop}{/setoverprint{pop}B}ifelse
/setseparationgray where{pop/doregblnd T def/sepgr{setseparationgray}B
 /setregcolor{/custprsnt F def 5 1 roll p4 1. exch sub dup/regsh X setseparationgray}B}
 {/doregblnd F def/sepgr systemdict/setgray get def
 /setregcolor{/custprsnt F def pop setcmykcolor}B}ifelse
/setregcolorrgb{/custprsnt F def pop setrgbcolor}B
/colorimage where{pop/clrimg{colorimage}def}
 {/proc{/i 0 def/j 0 def cmy{prc prm pry prk dup/tmpstr X}
 {prk dup dup length 3 idiv 0 exch getinterval/tmpstr X tmpstr}ifelse
 {cmy{1 index i get 3 index i get add 4 index i get add 3 div
 255 2 index sub 255 div mul add round cvi 255 exch sub 1}
 {pop dup i 3 getinterval{}forall .11 mul exch .59 mul add exch .3 mul
 add round cvi 3}ifelse i add/i X tmpstr j 3 -1 roll put/j j 1 add def}forall
 cmy{p3}{pop}ifelse tmpstr}B
 /clrimg{4 eq/cmy X pop/prk X cmy{/pry X/prm X/prc X}if/proc load image}B}ifelse
/stf systemdict/settransfer get def
/ctf systemdict/currenttransfer get def
systemdict/setcolortransfer known{/cstf systemdict/setcolortransfer get def}if
/cmykprsnt /currentcmykcolor where{pop T}{F}ifelse def
/setcmykcolor where{pop}
 {/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt
 {pop 0}if 3 1 roll}repeat R pop}B}ifelse
/C/setcmykcolor load def
/stovp0/setoverprint where{/setoverprint get}{{pop}}ifelse def
/stovp{dup/ovp X stovp0}B
/sttrp0/settrap where{/settrap get}{{pop}}ifelse def
/sttrp{dup/trp X sttrp0}B
/setcolorscreen where{pop/docpat where{pop}{/docpat T def}ifelse}
 {/docpat F def/setcolorscreen{setscreen 9{pop}repeat}B}ifelse
/xpscrn{dup not{pop currentscreen dup xcheck{T}
 {9 index 8 index and{60 0 sp0 T 7 -3 roll 3}{F 10 1 roll 9}ifelse
 {pop}repeat}ifelse dup{pop 3{5 -2 roll{exch}if pop 3 1 roll}repeat T}if}if
 {setscreen}if p2}def
/xpcscrn{dup not{pop/currentcolorscreen where{pop currentcolorscreen
 dup xcheck not{36 T}{F}ifelse}{24 T}ifelse{{pop}repeat F}
 {12{14 -2 roll{exch}if pop 12 1 roll}repeat T}ifelse}if{setcolorscreen}if}def
/q/Symbol findfont dup maxlength dict begin cf/Encoding xpv def currentdict end definefont dup/sym X
/q -1 3 -1 roll newmm/symf X p2
/CT ctf def
0 0 F 0 F F /|______AkzidenzGroteskBE-Bold 0 F dfnt
0 1 1 f
1 0 F 4 F F /|______Trajan-Bold 0 F dfnt
1 1 1 f
/epsmtx matrix currentmatrix def
pkng{savepacking setpacking}if
end
%%EndSetup
QuarkXPress_EPS_4.1 begin
-426 -462 1 dup neg S t
0 sttrp F stovp
F/ss X 1 1 pen 0 H 0 a 0 b[] 0 p
/custprsnt F def -1/regsh X
0 0 0 1 C
/setstrokeadjust where{pop F setstrokeadjust}if
(37 426 462 851 F rc u)kp
g np clippath 1 H V G calcbnd
T stovp
1 setchc 1 17 17 f
527.1122 254.9677 m .5097 -.1128 1 23.7776 (IN)d
554.8014 h (A)M
566.5048 h .5097 -.1128 7 91.0388 (USTRALIA)d
660.7785 h (T)M
672.515 h .5097 -.1128 5 60.4546 (O 1920)d
F stovp
1 setchc T stovp
0 32 32 f
525.7177 190.6604 m .8672 -.1797 1 32.0312 (PI)d
558.0615 h .8672 -.1797 1 48.6641 (ON)d
607.71 h (E)M
629.5459 h (E)M
651.3819 h (R)M
675.1944 h (I)M
686.3741 h (N)M
710.1866 h (G)M
0 .6 1 .18 (PANTONE 167 CV)1 setcustc
35 35 Z
525.7177 226.6604 m (I)M
538.142 h (R)M
564.3835 h (R)M
590.6249 h (I)M
602.3144 h .9485 0 1 51.0217 (GA)d
650.4736 h .9485 0 1 30.6165 (TI)d
681.8249 h .9485 0 1 53.2263 (ON)d
/custprsnt F def -1/regsh X
0 0 0 1 C
0 sttrp F stovp
T stovp
g 0 b 0 a .8 o
np 526.29 160.28 m
733.49 160.28 l
4 shp
 G
0 sttrp F stovp
0 sttrp F stovp
T stovp
g 0 b 0 a .8 o
np 526.29 159.23 m
733.49 159.23 l
4 shp
 G
0 sttrp F stovp
0 sttrp F stovp
T stovp
g 0 b 0 a .8 o
np 526.29 234.52 m
733.49 234.52 l
4 shp
 G
0 sttrp F stovp
0 sttrp F stovp
T stovp
g 0 b 0 a .8 o
np 526.29 233.47 m
733.49 233.47 l
4 shp
 G
0 sttrp F stovp
end
showpage
%%Trailer
